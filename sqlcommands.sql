-- Create Sequences FIRST
CREATE SEQUENCE "HABEEB_APPOINTMENT_SEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 11 NOCACHE NOORDER NOCYCLE NOKEEP NOSCALE GLOBAL;

CREATE SEQUENCE "HABEEB_DOCTOR_SEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER NOCYCLE NOKEEP NOSCALE GLOBAL;

CREATE SEQUENCE "HABEEB_PATIENT_SEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE NOKEEP NOSCALE GLOBAL;

CREATE SEQUENCE "HABEEB_PRESCRIPTION_SEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 2 NOCACHE NOORDER NOCYCLE NOKEEP NOSCALE GLOBAL;

-- Create Tables
CREATE TABLE "HABEEB_APPOINTMENTS" (
  "APPOINTMENTID" NUMBER,
  "PATIENTID" NUMBER NOT NULL ENABLE,
  "DOCTORID" NUMBER NOT NULL ENABLE,
  "APPOINTMENTDATE" DATE NOT NULL ENABLE,
  "STATUS" VARCHAR2(20),
  "NOTES" VARCHAR2(4000),
  PRIMARY KEY ("APPOINTMENTID") USING INDEX ENABLE,
  CONSTRAINT "CHK_APPOINTMENT_STATUS" CHECK (status IN ('Scheduled', 'Completed', 'Cancelled')) ENABLE
);

CREATE TABLE "HABEEB_DOCTORS" (
  "DOCTORID" NUMBER,
  "NAME" VARCHAR2(100),
  "SPECIALTY" VARCHAR2(100),
  "PHONE" VARCHAR2(15),
  "EMAIL" VARCHAR2(100),
  PRIMARY KEY ("DOCTORID") USING INDEX ENABLE
);

CREATE TABLE "HABEEB_PATIENTS" (
  "PATIENT_ID" NUMBER,
  "NAME" VARCHAR2(100),
  "AGE" NUMBER(3,0),
  "GENDER" VARCHAR2(10),
  "PHONE" VARCHAR2(15),
  "EMAIL" VARCHAR2(100),
  PRIMARY KEY ("PATIENT_ID") USING INDEX ENABLE
);

CREATE TABLE "HABEEB_PAYMENTS" (
  "PAYMENTID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE NOKEEP NOSCALE NOT NULL ENABLE,
  "APPOINTMENTID" NUMBER NOT NULL ENABLE,
  "BILL" NUMBER(10,2) NOT NULL ENABLE,
  "AMOUNT_PAID" NUMBER(10,2) NOT NULL ENABLE,
  "BALANCE" NUMBER(10,2) GENERATED ALWAYS AS ("BILL" - "AMOUNT_PAID") VIRTUAL,
  "PAYMENT_DATE" DATE DEFAULT SYSDATE,
  PRIMARY KEY ("PAYMENTID") USING INDEX ENABLE,
  CONSTRAINT "CHK_AMOUNT_PAID" CHECK (amount_paid <= bill) ENABLE
);

CREATE TABLE "HABEEB_PRESCRIPTIONS" (
  "PRESCRIPTIONID" NUMBER,
  "APPOINTMENTID" NUMBER NOT NULL ENABLE,
  "PRESCRIPTION_NOTES" VARCHAR2(1000),
  PRIMARY KEY ("PRESCRIPTIONID") USING INDEX ENABLE
);

-- Foreign Keys
ALTER TABLE "HABEEB_APPOINTMENTS" ADD FOREIGN KEY ("PATIENTID") REFERENCES "HABEEB_PATIENTS" ("PATIENT_ID") ENABLE;

ALTER TABLE "HABEEB_APPOINTMENTS" ADD FOREIGN KEY ("DOCTORID") REFERENCES "HABEEB_DOCTORS" ("DOCTORID") ENABLE;

ALTER TABLE "HABEEB_PAYMENTS" ADD CONSTRAINT "FK_APPOINTMENT" FOREIGN KEY ("APPOINTMENTID") REFERENCES "HABEEB_APPOINTMENTS" ("APPOINTMENTID") ENABLE;

ALTER TABLE "HABEEB_PRESCRIPTIONS" ADD CONSTRAINT "FK_PRESC_APPOINTMENT" FOREIGN KEY ("APPOINTMENTID") REFERENCES "HABEEB_APPOINTMENTS" ("APPOINTMENTID") ENABLE;

-- Custom Triggers
CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_HABEEB_APPOINTMENT_ID"
BEFORE INSERT ON habeeb_appointments
FOR EACH ROW
BEGIN
  :NEW.appointmentid := habeeb_appointment_seq.NEXTVAL;
END;
/
ALTER TRIGGER "TRG_HABEEB_APPOINTMENT_ID" ENABLE;

CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_HABEEB_DOCTOR_ID"
BEFORE INSERT ON habeeb_doctors
FOR EACH ROW
BEGIN
  :NEW.doctorid := habeeb_doctor_seq.NEXTVAL;
END;
/
ALTER TRIGGER "TRG_HABEEB_DOCTOR_ID" ENABLE;

CREATE OR REPLACE EDITIONABLE TRIGGER "HABEEB_TRG_PATIENT_ID"
BEFORE INSERT ON habeeb_patients
FOR EACH ROW
BEGIN
  :NEW.patient_id := habeeb_patient_seq.NEXTVAL;
END;
/
ALTER TRIGGER "HABEEB_TRG_PATIENT_ID" ENABLE;

CREATE OR REPLACE EDITIONABLE TRIGGER "TRG_HABEEB_PRESCRIPTION_ID"
BEFORE INSERT ON habeeb_prescriptions
FOR EACH ROW
BEGIN
  :NEW.prescriptionid := habeeb_prescription_seq.NEXTVAL;
END;
/
ALTER TRIGGER "TRG_HABEEB_PRESCRIPTION_ID" ENABLE;

